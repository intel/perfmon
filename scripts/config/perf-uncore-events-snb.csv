UNC_C_CLOCKTICKS,,Uncore cache clock ticks,,,
UNC_C_LLC_LOOKUP.ANY,,All LLC Misses (code+ data rd + data wr - including demand and prefetch),State=0x1,64,
UNC_C_LLC_VICTIMS.M_STATE,,M line evictions from LLC (writebacks to memory),,64,
UNC_C_TOR_INSERTS.MISS_OPCODE.DEMAND,LLC_MISSES.DATA_READ,LLC misses - demand and prefetch data reads - excludes LLC prefetches,Match=0x182,64,
UNC_C_TOR_INSERTS.MISS_OPCODE.UNCACHEABLE,LLC_MISSES.UNCACHEABLE,LLC misses - Uncacheable reads,Match=0x187,,
UNC_C_TOR_INSERTS.MISS_OPCODE.DDIO_MISS,LLC_MISSES.PCIE_WRITE,PCIe allocating writes that miss LLC - DDIO misses,Match=0x19c,64,
UNC_C_TOR_INSERTS.MISS_OPCODE.ITOM_WRITE,LLC_MISSES.ITOM_WRITE,LLC misses for ItoM writes (as part of fast string memcpy stores),Match=0x1c8,64,
UNC_C_TOR_INSERTS.OPCODE.STREAMING_FULL,LLC_REFERENCES.STREAMING_FULL,Streaming stores (full cache line),Match=0x18c,64,
UNC_C_TOR_INSERTS.OPCODE.STREAMING_PARTIAL,LLC_REFERENCES.STREAMING_PARTIAL,Streaming stores (partial cache line),Match=0x18d,,
UNC_C_TOR_INSERTS.OPCODE.PCIE_PARTIAL,LLC_REFERENCES.PCIE_PARTIAL_READ,Partial PCIe reads,Match=0x195,,
UNC_C_TOR_INSERTS.OPCODE.DDIO_HIT,LLC_REFERENCES.PCIE_WRITE,PCIe allocating writes that hit in LLC (DDIO hits),Match=0x19c,,
UNC_C_TOR_INSERTS.OPCODE.PCIE_READ_CURRENT,LLC_REFERENCES.PCIE_READ,PCIe read current,Match=0x19e,,
UNC_C_TOR_INSERTS.OPCODE.ITOM_WRITE_HIT,LLC_REFERENCES.ITOM_WRITE,ItoM write hits (as part of fast string memcpy stores),Match=0x1c8,64,
UNC_C_TOR_INSERTS.OPCODE.PCIE_READ,LLC_REFERENCES.PCIE_NS_READ,PCIe non-snoop reads,Match=0x1e4,64,
UNC_C_TOR_INSERTS.OPCODE.PCIE_PARTIAL_WRITE,LLC_REFERENCES.PCIE_NS_PARTIAL_WRITE,PCIe non-snoop writes (partial),Match=0x1e5,,
UNC_C_TOR_INSERTS.OPCODE.PCIE_FULL_WRITE,LLC_REFERENCES.PCIE_NS_WRITE,PCIe non-snoop writes (full line),Match=0x1e6,64,
UNC_C_TOR_OCCUPANCY.MISS_ALL,,Occupancy counter for all LLC misses; we divide this by UNC_C_CLOCKTICKS to get average Q depth,Match=0x182,,X/UNC_C_CLOCKTICKS
UNC_C_TOR_OCCUPANCY.MISS_OPCODE.LLC_DATA_READ,UNC_C_TOR_OCCUPANCY.LLC_DATA_READ,Occupancy counter for LLC data reads (demand and L2 prefetch),,,
UNC_H_REQUESTS.READS,,read requests to home agent,,,
UNC_H_REQUESTS.WRITES,,write requests to home agent,,,
UNC_M_ACT_COUNT,,Memory page activates,,,
UNC_M_CAS_COUNT.RD,LLC_MISSES.MEM_READ,read requests to memory controller,,,
UNC_M_CAS_COUNT.WR,LLC_MISSES.MEM_WRITE,write requests to memory controller,,,
UNC_M_CLOCKTICKS,,Memory controller clock ticks. Used to get percentages of memory controller cycles events,,,
UNC_M_POWER_CHANNEL_PPD,,Cycles where DRAM ranks are in power down (CKE) mode,,,X/UNC_M_CLOCKTICKS
UNC_M_POWER_CRITICAL_THROTTLE_CYCLES,,Cycles all ranks are in critical thermal throttle,,,X/UNC_M_CLOCKTICKS
UNC_M_POWER_SELF_REFRESH,,Cycles Memory is in self refresh power mode,,,X/UNC_M_CLOCKTICKS
UNC_M_PRE_COUNT.PAGE_MISS,,Memory page conflicts,,,
UNC_M_RPQ_OCCUPANCY,,Occupancy counter for memory read queue,,,
UNC_Q_CLOCKTICKS,,QPI clock ticks. Used to get percentages of QPI cycles events,,,
UNC_Q_RxL0P_POWER_CYCLES,,Cycles where receiving QPI link is in half-width mode,,,X/UNC_Q_CLOCKTICKS
UNC_Q_TxL0P_POWER_CYCLES,,Cycles where transmitting QPI link is in half-width mode,,,X/UNC_Q_CLOCKTICKS
UNC_Q_TxL_FLITS_G0.DATA,,Number of data flits transmitted ,,8,
UNC_Q_TxL_FLITS_G0.NON_DATA,,Number of non data (control) flits transmitted ,,8,
UNC_P_CLOCKTICKS,,PCU clock ticks. Use to get percentages of PCU cycles events.,,,
UNC_P_FREQ_BAND0_CYCLES,,Counts the number of cycles that the uncore was running at a frequency greater than or equal to the frequency that is configured in the filter.  (filter_band0=XXX with XXX in 100Mhz units). One can also use inversion (filter_inv=1) to track cycles when we were less than the configured frequency,,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_BAND1_CYCLES,,Counts the number of cycles that the uncore was running at a frequency greater than or equal to the frequency that is configured in the filter.  (filter_band1=XXX with XXX in 100Mhz units). One can also use inversion (filter_inv=1) to track cycles when we were less than the configured frequency,,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_BAND2_CYCLES,,Counts the number of cycles that the uncore was running at a frequency greater than or equal to the frequency that is configured in the filter.  (filter_band2=XXX with XXX in 100Mhz units). One can also use inversion (filter_inv=1) to track cycles when we were less than the configured frequency,,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_BAND3_CYCLES,,"Counts the number of cycles that the uncore was running at a frequency greater than or equal to the frequency that is configured in the filter.  (filter_band3=XXX, with XXX in 100Mhz units). One can also use inversion (filter_inv=1) to track cycles when we were less than the configured frequency",,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_BAND0_CYCLES,UNC_P_FREQ_BAND0_TRANSITIONS,Counts the number of times that the uncore transitioned a frequency greater than or equal to the frequency that is configured in the filter.  (filter_band0=XXX with XXX in 100Mhz units). One can also use inversion (filter_inv=1) to track cycles when we were less than the configured frequency,edge=1,,
UNC_P_FREQ_BAND1_CYCLES,UNC_P_FREQ_BAND1_TRANSITIONS,Counts the number of times that the uncore transistioned to a frequency greater than or equal to the frequency that is configured in the filter.  (filter_band1=XXX with XXX in 100Mhz units). One can also use inversion (filter_inv=1) to track cycles when we were less than the configured frequency,edge=1,,
UNC_P_FREQ_BAND2_CYCLES,UNC_P_FREQ_BAND2_TRANSITIONS,Counts the number of cycles that the uncore transitioned to a frequency greater than or equal to the frequency that is configured in the filter.  (filter_band2=XXX with XXX in 100Mhz units). One can also use inversion (filter_inv=1) to track cycles when we were less than the configured frequency,edge=1,,
UNC_P_FREQ_BAND3_CYCLES,UNC_P_FREQ_BAND3_TRANSITIONS,"Counts the number of cycles that the uncore transitioned to a frequency greater than or equal to the frequency that is configured in the filter.  (filter_band3=XXX, with XXX in 100Mhz units). One can also use inversion (filter_inv=1) to track cycles when we were less than the configured frequency",edge=1,,
UNC_P_POWER_STATE_OCCUPANCY.CORES_C0,,"This is an occupancy event that tracks the number of cores that are in C0.  It can be used by itself to get the average number of cores in C0, with threshholding to generate histograms, or with other PCU events and occupancy triggering to capture other details.",occ_sel=1,,X/UNC_P_CLOCKTICKS
UNC_P_POWER_STATE_OCCUPANCY.CORES_C3,,"This is an occupancy event that tracks the number of cores that are in C3.  It can be used by itself to get the average number of cores in C0, with threshholding to generate histograms, or with other PCU events and occupancy triggering to capture other details.",occ_sel=2,,X/UNC_P_CLOCKTICKS
UNC_P_POWER_STATE_OCCUPANCY.CORES_C6,,"This is an occupancy event that tracks the number of cores that are in C6.  It can be used by itself to get the average number of cores in C0, with threshholding to generate histograms, or with other PCU events ",occ_sel=3,,X/UNC_P_CLOCKTICKS
UNC_P_PROCHOT_EXTERNAL_CYCLES,,Counts the number of cycles that we are in external PROCHOT mode.  This mode is triggered when a sensor off the die determines that something off-die (like DRAM) is too hot and must throttle to avoid damaging the chip.,,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_MAX_LIMIT_THERMAL_CYCLES,,Counts the number of cycles when temperature is the upper limit on frequency.,,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_MAX_OS_CYCLES,,Counts the number of cycles when the OS is the upper limit on frequency.,,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_MAX_POWER_CYCLES,,Counts the number of cycles when power is the upper limit on frequency.,,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_MAX_CURRENT_CYCLES,,Counts the number of cycles when current is the upper limit on frequency.,,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_TRANS_CYCLES,,Cycles spent changing Frequency,,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_BAND0_CYCLES,UNC_P_FREQ_GE_1200MHZ_CYCLES,Counts the number of cycles that the uncore was running at a frequency greater than or equal to 1.2Ghz,filter_band0=1200,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_BAND1_CYCLES,UNC_P_FREQ_GE_2000MHZ_CYCLES,Counts the number of cycles that the uncore was running at a frequency greater than or equal to 2Ghz,filter_band1=2000,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_BAND2_CYCLES,UNC_P_FREQ_GE_3000MHZ_CYCLES,Counts the number of cycles that the uncore was running at a frequency greater than or equal to 3Ghz,filter_band2=3000,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_BAND3_CYCLES,UNC_P_FREQ_GE_4000MHZ_CYCLES,Counts the number of cycles that the uncore was running at a frequency greater than or equal to 4Ghz,filter_band3=4000,,X/UNC_P_CLOCKTICKS
UNC_P_FREQ_BAND0_CYCLES,UNC_P_FREQ_GE_1200MHZ_TRANSITIONS,Counts the number of times that the uncore transitioned to a frequency greater than or equal to 1.2Ghz,"edge=1,filter_band0=1200",,
UNC_P_FREQ_BAND1_CYCLES,UNC_P_FREQ_GE_2000MHZ_TRANSITIONS,Counts the number of times that the uncore transitioned to a frequency greater than or equal to 2Ghz,"edge=1,filter_band1=2000",,
UNC_P_FREQ_BAND2_CYCLES,UNC_P_FREQ_GE_3000MHZ_TRANSITIONS,Counts the number of cycles that the uncore transitioned to a frequency greater than or equal to 3Ghz,"edge=1,filter_band2=4000",,
UNC_P_FREQ_BAND3_CYCLES,UNC_P_FREQ_GE_4000MHZ_TRANSITIONS,Counts the number of cycles that the uncore transitioned to a frequency greater than or equal to 4Ghz,"edge=1,filter_band3=4000",,
